#!/bin/bash

# Do every xrandr command separated to workaround Fedora bug about not waking some monitors.
# Change DPI to consistent value so some applications which use it have consistent font sizes.

D_LAPTOP="eDP1"
D_SINGLE="HDMI2"
D_DOCK="DP2-2"
D_PROJECTOR="$D_SINGLE"

tell() {
    local message="$1"

    echo "$message"
    sleep 0.5  # Wait a bit for notification, so it shows correctly
    notify-send "$message" -t 3000
}

all_off() {
    xrandr --output "$D_LAPTOP" --off
    xrandr --output "$D_SINGLE" --off
    xrandr --output "$D_DOCK" --off
}

screen_change() {
    local screen="$1"
    local message="$2"

    all_off
    xrandr --output "$screen" --primary --auto
    xrandr --dpi 96x96

    tell "$message"
}

mirror() {
    local resolution="$1"

    all_off
    xrandr --output "$D_PROJECTOR" --primary --mode "$resolution"
    xrandr --output "$D_LAPTOP" --same-as "$D_PROJECTOR" --mode 1920x1080 --scale-from "$resolution"
    xrandr --dpi 96x96

    tell "Mirror"
}

parse_xrandr() {
    local xrandr_output

    xrandr_output=$( xrandr )
    connected=( $( awk '/ connected/ { print $1 }' <<< "$xrandr_output" ) )
    active=( $( awk '/connected/ { used = 0; screen = $1 }
                     /\*/ { print screen }' <<< "$xrandr_output" ) )
    projector_resolutions=( $( awk 'use && /connected/ && !/'"$D_PROJECTOR"'/ { exit }
                                    use { print $1 }
                                    /'"$D_PROJECTOR"' connected/ { use = 1 }' <<< "$xrandr_output" ) )
}


case "$1" in
    "auto")
        parse_xrandr
        if [[ "${connected[*]}" == *"$D_DOCK"* ]]; then
            # Do not check if D_DOCK is active, as there is bug 
            # somewhere and after dock connection it always thinks that
            # it is active
            screen_change "$D_DOCK" "Dock"
        elif [[ "${connected[*]}" == *"$D_SINGLE"* ]]; then
            if [[ ! "${active[*]}" == *"$D_SINGLE"* ]]; then
                screen_change "$D_SINGLE" "Single screen"
            else
                echo "$D_SINGLE is already active"
            fi
            
        else
            if [[ ! "${active[*]}" == *"$D_LAPTOP"* ]]; then
                screen_change "$D_LAPTOP" "Laptop only"
            else
                echo "$D_LAPTOP is already active"
            fi
        fi
        ;;
    "single")
        screen_change "$D_SINGLE" "Single screen"
        ;;
    "dock")
        screen_change "$D_DOCK" "Dock"
        ;;
    "mirror")
        parse_xrandr
        if [[ "${connected[*]}" == *"$D_PROJECTOR"* ]]; then
            if command -v yad > /dev/null; then
                selected_resolution=$( yad --list --width=250 --height=200 \
                                       --title "Select resolution" --no-headers --separator="" \
                                       --column="" "${projector_resolutions[@]}" )
                if (( $? != 0 )); then
                    exit 2
                fi
            else
                tell 'You need `yad` installed to select resolution'
                selected_resolution="${projector_resolutions[0]}"
            fi
            mirror "$selected_resolution"
        else
            tell "No projector connected"
        fi
        ;;
    *)
        screen_change "$D_LAPTOP" "Laptop only"
        ;;
esac
