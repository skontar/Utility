#!/bin/bash

. "${BASH_SOURCE%/*}/../confidential/remote-mount-config.sh"

#~ mount_root="$HOME/Remote"
mount_root="/mount"

umount_command="fusermount -u"

# Check nohup option
if [[ "$1" == "--nohup" ]]; then
    use_nohup=true
fi

# Print possible commands
echo "[X] - Umount all"
nr_of_elements=${#command_list[@]}
for (( i = 0; i < nr_of_elements; i += 2 )); do
    command_index=$(( i / 2 + 1 ))
    command_name_upper=${command_list[i]^^}
    echo "[$command_index] - $command_name_upper"
done

# Read one character
read -rsn1 response

# Check and execute command with number
nr_of_commands=$(( nr_of_elements / 2 ))
if (( response > 0 && response <= nr_of_commands )); then
    command_name_index=$(( response * 2 - 2 ))
    command_name=${command_list[command_name_index]}
    command_index=$(( response * 2 - 1 ))
    command=${command_list[command_index]}

    target_path="$mount_root/$command_name"
    if [[ ! -d "$target_path" ]]; then
        mkdir ${target_path}
    fi

    command_completed="${command/\#/${target_path}}"
    echo "$command_completed"
    if [[ "$use_nohup" == true ]]; then
        # Nohup is needed for running sshfs in terminal so it does not exit
        nohup ${command_completed} >/dev/null 2>&1
    else
        ${command_completed}
    fi
    
fi

# Check and execute umount command
if [[ "$response" == [xX] ]]; then
    for (( i = 0; i < nr_of_elements; i += 2 )); do
        command_name=${command_list[i]}
        target_path="$mount_root/$command_name"
        if mountpoint -q ${target_path}; then  # Check if mountpoint is mounted now
            echo "$umount_command $target_path"
            ${umount_command} ${target_path}
        fi
    done
fi
